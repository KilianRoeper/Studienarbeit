
plan
-tracking iO/ niO of all stations
iO = 1
niO = 0

-goal: sorting PIs into shelf and live-tracking the position in the process and position in shelf 


Predefining Block Position in Tags to write/read state of station to/from that location:

sending position/time,date of PI in the process at each station

setting: on NFC-Tag
sending: to central PI






assembling
- determination of UID to write to NFC-Tag on PI (0xA)
- setting: iO/niO for the assembling process (0xB)
- setting tracking (0xF)

sending: 
{
UID: Id,
tracking: to shelf,
finished: F,
assembling:{
	state: iO/niO,
	timestamp: time, date
	}
}




shelf
put_into_shelf     if was_at_screwing     else    to_screwing

if put_into_shelf: 
- setting: iO/niO for shelf + position (0xC)

sending:
{
UID: Id,
tracking: in_shelf,
finished: T,
shelf: {
	state: iO/niO,
	timestamp: time, date,
	position: 8Bit,
	}
}
-getting shelf-position from robot
-reading states of all stations from predefined locations in NFC-Tag

if to_screwing:
- setting: iO/niO for shelf (0xC)
	
sending: 
{
UID: Id,
tracking: to_screwing,
finished: F,
shelf: {
	state: iO/niO,
	timestamp: time, date,
	in_shelf: F
	}
}




end of line
- setting iO/niO for end of line process (0xE)
- setting tracking (0xF)

sending: 
{
UID: id, 
tracking: to_shelf,
finished: F,
end_of_line: {
	state: iO/niO,
	timestamp: time, date
	}
}


screw
- setting: iO/niO for screwing process (at 0xD)
- setting tracking (0xF)

sending: 
{
UID: id, 
tracking: to end of line,
finished: F,
screwing: {
	state: iO/niO,
	timestamp: time, date
	}
}




central 
creating database to keep track of states for all UIDs

json = {
id: {
UID: id,
tracking: where_in_process,
finished: T/F,
assembling: {
	state: iO/niO,
	timestamp: time/date,
	},
shelf: {
	state: iO/niO,
	timestamp: time/date,
	position:  4Bit
	},
screwing: {
	state: iO/niO,
	timestamp: time/date
	},
end_of_line: {
	state: iO/niO,
	timestamp: time/date
	}
},
{
another UID
}
}











