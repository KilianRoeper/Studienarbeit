[
    {
        "id": "ba56541079a77bac",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e053d61f24724af0",
        "type": "mqtt in",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/eol_mcu_send",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "126a84eeff63c5a9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "f1619fd79c7d79bd"
            ]
        ]
    },
    {
        "id": "5e0cc02a05ed6339",
        "type": "mqtt in",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/shelf_mcu_send",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "126a84eeff63c5a9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "f1619fd79c7d79bd"
            ]
        ]
    },
    {
        "id": "f03b21f29ed34ec8",
        "type": "mqtt in",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/assembling_mcu_send",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "126a84eeff63c5a9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "f1619fd79c7d79bd"
            ]
        ]
    },
    {
        "id": "58610c1dd83a8e56",
        "type": "mqtt in",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/screwing_mcu_send",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "126a84eeff63c5a9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "f1619fd79c7d79bd"
            ]
        ]
    },
    {
        "id": "4b0e7c849593f784",
        "type": "mqtt out",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/eol_mcu_receive",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "126a84eeff63c5a9",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "02bc0d5c96da734c",
        "type": "inject",
        "z": "ba56541079a77bac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "iO",
        "payloadType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "4b0e7c849593f784",
                "d2eac2b4c1b06f37",
                "9549a791e48be194",
                "9f4dc0d762d2b622"
            ]
        ]
    },
    {
        "id": "d2eac2b4c1b06f37",
        "type": "mqtt out",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/shelf_mcu_receive",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "126a84eeff63c5a9",
        "x": 380,
        "y": 420,
        "wires": []
    },
    {
        "id": "9549a791e48be194",
        "type": "mqtt out",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/screwing_mcu_receive",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "126a84eeff63c5a9",
        "x": 400,
        "y": 480,
        "wires": []
    },
    {
        "id": "9f4dc0d762d2b622",
        "type": "mqtt out",
        "z": "ba56541079a77bac",
        "name": "",
        "topic": "rfid/assembling_mcu_receive",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "126a84eeff63c5a9",
        "x": 400,
        "y": 540,
        "wires": []
    },
    {
        "id": "2a77923f86e394ce",
        "type": "ui_template",
        "z": "ba56541079a77bac",
        "group": "68dc7b33a2269221",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div style=\"position: relative; width: 100%; height: 100%;\">\n  <svg id=\"bandumlauf\" width=\"900\" height=\"700\">\n      <!-- Definiere animierten Pfeil-Marker -->\n    <defs>\n      <!-- Animation Ã¼ber inline styles -->\n      <style>\n        .animated-path {\n          stroke: #15AC2E;\n          stroke-width: 8;\n          stroke-dasharray: 20;\n          stroke-dashoffset: 0;\n          animation: dashmove 2s linear infinite;\n          fill: none;\n        }\n\n        @keyframes dashmove {\n          0% {\n            stroke-dashoffset: 0;\n          }\n          100% {\n            stroke-dashoffset: -40;\n          }\n        }\n      </style>\n    </defs>\n\n    <!-- Der animierte Bandumlaufweg -->\n    <path class=\"animated-path\" style=\"fill: rgba(21, 172, 46, 0.3)\" d=\"M100,200 \n                L500,200 \n                L500,550 \n                L530,580 \n                L560,580 \n                L590,550 \n                L590,110 \n                L100,110 \n                L70,140 \n                L70,170 \n                L100,200\" />\n\n      <g id=\"eol\" transform=\"translate(330, 370) scale(0.4)\">\n        <polygon points=\"145.481,183.389 161.371,183.389 161.371,172.389 145.481,172.389 145.481,167.635 161.371,167.635 \n          161.371,156.635 134.481,156.635 134.481,172.389 134.481,183.389 134.481,197.469 145.481,197.469 \t\" />\n          <rect x=\"165.006\" y=\"156.635\" width=\"11\" height=\"40.834\" />\n        <polygon points=\"190.679,180.837 201.387,197.469 210.06,197.469 210.06,156.635 199.06,156.635 199.06,173.535 187.973,156.315 \n          179.679,156.315 179.679,197.469 190.679,197.469 \t\" />\n        <polygon style=\"fill:#FFFFFF;\" points=\"225.167,208.469 225.167,205.562 225.167,197.469 210.06,197.469 201.387,197.469 \n          190.679,197.469 179.679,197.469 176.006,197.469 165.006,197.469 145.481,197.469 134.481,197.469 118.833,197.469 \n          118.833,205.562 118.833,208.469 118.833,216.562 225.167,216.562 \t\" />\n        <polygon style=\"fill:#FFFFFF;\" points=\"225.167,156.315 225.167,149.222 225.167,145.315 225.167,138.222 118.833,138.222 \n          118.833,145.315 118.833,149.222 118.833,156.315 179.679,156.315 187.973,156.315 \t\" />\n        <path d=\"M338,58.116H6c-3.314,0-6,2.686-6,6v215.769c0,3.314,2.686,6,6,6h332c3.313,0,6-2.686,6-6V64.116\n          C344,60.802,341.313,58.116,338,58.116z M12,100.919c106.19-9.823,213.81-9.823,320,0v150.808c-106.196-9.755-213.804-9.755-320,0\n          V100.919z M332,70.116v18.753c-106.196-9.755-213.804-9.755-320,0V70.116H332z M12,273.884v-10.108\n          c106.19-9.823,213.81-9.823,320,0v10.108H12z\" />\n      </g>\n\n      <g id=\"shelf\" transform=\"translate(630, 370) scale(0.9)\">\n        <svg fill=\"#000000\" height=\"150px\" width=\"150px\" version=\"1.1\" id=\"Layer_1\"   xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            viewBox=\"0 0 508 508\" xml:space=\"preserve\">\n          <g>\n            <g>\n              <path d=\"M490,62H22C11.612,62,0,70.552,0,82v360c0,2.208,1.788,4,4,4s4-1.792,4-4V82c0-6.648,7.66-12,14-12h468\n                c6.908,0,10,6.028,10,12v360c0,2.208,1.788,4,4,4c2.212,0,4-1.792,4-4V82C508,70.412,500.428,62,490,62z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M504,414H4c-2.212,0-4,1.792-4,4s1.788,4,4,4h500c2.212,0,4-1.792,4-4S506.212,414,504,414z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M488,238H120c-2.212,0-4,1.792-4,4s1.788,4,4,4h368c2.212,0,4-1.792,4-4S490.212,238,488,238z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M104,238H4c-2.212,0-4,1.792-4,4s1.788,4,4,4h100c2.212,0,4-1.792,4-4S106.212,238,104,238z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M204,150H4c-2.212,0-4,1.792-4,4s1.788,4,4,4h200c2.212,0,4-1.792,4-4S206.212,150,204,150z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M504,150H220c-2.212,0-4,1.792-4,4s1.788,4,4,4h284c2.212,0,4-1.792,4-4S506.212,150,504,150z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M88,326H4c-2.212,0-4,1.792-4,4s1.788,4,4,4h84c2.212,0,4-1.792,4-4S90.212,326,88,326z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M504,326H104c-2.212,0-4,1.792-4,4s1.788,4,4,4h400c2.212,0,4-1.792,4-4S506.212,326,504,326z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M204,66c-2.212,0-4,1.792-4,4v344c0,2.208,1.788,4,4,4c2.212,0,4-1.792,4-4V70C208,67.792,206.212,66,204,66z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M104,66c-2.212,0-4,1.792-4,4v344c0,2.208,1.788,4,4,4s4-1.792,4-4V70C108,67.792,106.212,66,104,66z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M304,66c-2.212,0-4,1.792-4,4v244c0,2.208,1.788,4,4,4c2.212,0,4-1.792,4-4V70C308,67.792,306.212,66,304,66z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M304,326c-2.212,0-4,1.792-4,4v88c0,2.208,1.788,4,4,4c2.212,0,4-1.792,4-4v-88C308,327.792,306.212,326,304,326z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M404,66c-2.212,0-4,1.792-4,4v68c0,2.208,1.788,4,4,4c2.212,0,4-1.792,4-4V70C408,67.792,406.212,66,404,66z\"/>\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\"M404,150c-2.212,0-4,1.792-4,4v264c0,2.208,1.788,4,4,4c2.212,0,4-1.792,4-4V154C408,151.792,406.212,150,404,150z\"/>\n            </g>\n          </g>\n        </svg>\n      </g>\n\n      <g id=\"screwing\" transform=\"translate(150, 0) scale(0.4)\">\n        <svg width=\"200px\" height=\"200px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.6173 1.07615C12.991 0.921369 13.4211 1.00692 13.7071 1.29292L22.7071 10.2929C22.9931 10.5789 23.0787 11.009 22.9239 11.3827C22.7691 11.7564 22.4045 12 22 12H17.4142L7 22.4142C6.62493 22.7893 6.11622 23 5.58579 23H3C1.89543 23 1 22.1046 1 21V18.4142C1 17.8838 1.21071 17.3751 1.58579 17C5.05723 13.5286 8.52858 10.0572 12 6.58582V2.00003C12 1.59557 12.2436 1.23093 12.6173 1.07615ZM10.5 10.9142L9.41422 12L12 14.5858L13.0858 13.5L10.5 10.9142ZM14.5 12.0858L11.9142 9.49999L13 8.41424L15.5858 11L14.5 12.0858ZM10.5858 16L8 13.4142L6.91422 14.5L9.5 17.0858L10.5858 16ZM8.08579 18.5L5.50001 15.9142L4.41422 17L7 19.5858L8.08579 18.5ZM5.58579 21L3 18.4142V21H5.58579ZM14 4.41424V6.58582L17.4142 10H19.5858L14 4.41424Z\" fill=\"#0F0F0F\"/>\n        </svg>\n      </g>\n\n      <g id=\"assembling\" transform=\"translate(700, 30) scale(0.4)\">\n        <svg fill=\"#000000\" height=\"200px\" width=\"200px\" version=\"1.2\" baseProfile=\"tiny\" id=\"Layer_1\"\n          xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 256 256.3\"\n          xml:space=\"preserve\">\n          <path d=\"M243.2,1.4H11.5c-6,0-10.8,4.8-10.8,10.8v231.9c0,6,4.8,10.8,10.8,10.8h231.7c6,0,10.8-4.8,10.8-10.8V12.2\n          C254,6.2,249.2,1.4,243.2,1.4z M242,127.9h-30.2c-9.4-1.7-16.1-15.1-8.9-20.9c6.5-4.8,10.8-12.5,10.8-21.1\n          c0-14.4-11.5-25.9-25.9-25.9s-25.9,11.5-25.9,25.9c0,8.6,4.3,16.3,10.8,21.1c7.2,6,0.5,19.7-9.6,20.9h-35.8V92.1v-0.5\n          c0-9.8-13.7-17-19.4-10.1c-4.3,6-11.5,10.1-19.4,10.1c-13.2,0-24-10.8-24-24s10.8-24,24-24c8.2,0,15.1,4.1,19.4,10.1\n          c5.8,7,19.4-0.5,19.4-9.8V13.4H242V127.9z M12.7,128.4h30c9.4,1.7,16.1,15.1,8.9,20.9c-6.5,4.8-10.8,12.5-10.8,21.1\n          c0,14.4,11.5,25.9,25.9,25.9s25.9-11.5,25.9-25.9c0-8.6-4.3-16.3-10.8-21.1c-7.2-6-0.5-19.9,9.6-20.9h35.8v35.8v0.5\n          c0,9.8,13.7,17,19.4,10.1c4.3-6,11.5-10.1,19.4-10.1c13.2,0,24,10.8,24,24s-10.8,24-24,24c-8.2,0-15.1-4.1-19.4-10.1\n          c-5.8-7-19.4,0.5-19.4,9.8v30.5H12.7V128.4z\" />\n        </svg>\n      </g>\n\n      <g id=\"PI\" transform=\"translate(70, 500) scale(0.4)\" style=\"display: none;\">\n        <svg fill=\"#000000\" width=\"200px\" height=\"200px\" viewBox=\"0 0 14 14\" role=\"img\" focusable=\"false\" aria-hidden=\"true\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M 4.8457031 1 C 4.7850211 1.0018831 4.7186513 1.0235473 4.6445312 1.0820312 C 4.4629532 1.0120106 4.288294 0.98830976 4.1308594 1.1308594 C 3.8877495 1.0993255 3.8079023 1.1642667 3.7480469 1.2402344 C 3.6946801 1.2391278 3.3481116 1.1852034 3.1894531 1.421875 C 2.7907361 1.374695 2.6658127 1.657229 2.8085938 1.9199219 C 2.7271618 2.0459869 2.6415959 2.1698296 2.8320312 2.4101562 C 2.7646643 2.5440091 2.8081062 2.6895079 2.9667969 2.8652344 C 2.9249169 3.0534015 3.0066389 3.1855983 3.1542969 3.2890625 C 3.1266809 3.5465578 3.3899991 3.69665 3.46875 3.75 C 3.498991 3.9000357 3.5620248 4.0428123 3.8632812 4.1210938 C 3.9129632 4.3446878 4.0942071 4.382759 4.2695312 4.4296875 C 3.6900579 4.7665205 3.1938956 5.2094696 3.1972656 6.296875 L 3.1113281 6.4472656 C 2.4468836 6.851331 1.8484037 8.1514314 2.7832031 9.2070312 C 2.8442641 9.5374595 2.9478812 9.7744338 3.0390625 10.037109 C 3.1754354 11.095576 4.0660377 11.591776 4.3007812 11.650391 C 4.6447734 11.912413 5.0100828 12.159834 5.5058594 12.333984 C 5.9732172 12.815996 6.4791924 13.000302 6.9882812 13 C 6.9957413 12.999996 7.0042538 13.000084 7.0117188 13 C 7.5208077 13.000317 8.026766 12.816013 8.4941406 12.333984 C 8.9899004 12.159834 9.3552266 11.912413 9.6992188 11.650391 C 9.9339623 11.591781 10.824562 11.095576 10.960938 10.037109 C 11.052107 9.7744338 11.155735 9.5374596 11.216797 9.2070312 C 12.15158 8.1513476 11.553133 6.8513311 10.888672 6.4472656 L 10.802734 6.296875 C 10.806134 5.2095534 10.309943 4.7666043 9.7304688 4.4296875 C 9.905793 4.3827695 10.08704 4.3427448 10.136719 4.1191406 C 10.437974 4.0408456 10.501021 3.900024 10.53125 3.75 C 10.61001 3.696662 10.873317 3.5465578 10.845703 3.2890625 C 10.993358 3.1855882 11.075085 3.0533847 11.033203 2.8652344 C 11.191894 2.6895079 11.235344 2.5440177 11.167969 2.4101562 C 11.358433 2.1699301 11.272718 2.045987 11.191406 1.9199219 C 11.334079 1.6572291 11.209414 1.3746949 10.810547 1.421875 C 10.651938 1.1852033 10.305438 1.2391279 10.251953 1.2402344 C 10.192098 1.1642668 10.11225 1.0993256 9.8691406 1.1308594 C 9.7117059 0.9883098 9.5370467 1.0120088 9.3554688 1.0820312 C 9.1398555 0.91188785 8.9969519 1.0499947 8.8339844 1.1015625 C 8.5729347 1.0162611 8.513027 1.1321084 8.3847656 1.1796875 C 8.1000755 1.1195287 8.0134299 1.2504346 7.8769531 1.3886719 L 7.71875 1.3867188 C 7.2893508 1.6397711 7.0756156 2.1550327 7 2.4199219 C 6.9243492 2.1549824 6.7105654 1.6397207 6.28125 1.3867188 L 6.1230469 1.3886719 C 5.9864024 1.2504383 5.8999245 1.1195304 5.6152344 1.1796875 C 5.486973 1.1321084 5.427233 1.0162611 5.1660156 1.1015625 C 5.0590523 1.0677199 4.9615408 0.99640533 4.8457031 1 z M 4.8613281 1.3046875 C 5.0793893 1.3854505 5.1903417 1.4888692 5.3085938 1.5917969 C 5.3486848 1.5376909 5.4105084 1.4977395 5.3359375 1.3671875 C 5.49076 1.4564285 5.6070973 1.5618714 5.6933594 1.6796875 C 5.7891506 1.6186937 5.75143 1.5358574 5.7519531 1.4589844 C 5.9128516 1.5898697 6.015633 1.729227 6.140625 1.8652344 C 6.1658028 1.8469022 6.1875674 1.7838857 6.2070312 1.6855469 C 6.5908933 2.0579577 7.1325325 2.9972328 6.3457031 3.3691406 C 5.676061 2.816862 4.8764957 2.4144192 3.9902344 2.1132812 C 5.1294642 2.7006179 5.7914763 3.1754259 6.1542969 3.5800781 C 5.9684938 4.3247992 4.9989688 4.3587813 4.6445312 4.3378906 C 4.7171021 4.3041118 4.7773573 4.2633393 4.7988281 4.2011719 C 4.7098918 4.1379667 4.3959383 4.19595 4.1757812 4.0722656 C 4.2603516 4.0547449 4.3002855 4.0370199 4.3398438 3.9746094 C 4.1318422 3.9082706 3.9071562 3.8520832 3.7753906 3.7421875 C 3.8465016 3.7430661 3.9129948 3.7577674 4.0058594 3.6933594 C 3.8195534 3.5929605 3.6212471 3.512836 3.4667969 3.359375 C 3.563122 3.3570172 3.6670697 3.3576876 3.6972656 3.3222656 C 3.5267534 3.2166268 3.3827622 3.0991992 3.2636719 2.9707031 C 3.3984722 2.986975 3.4537346 2.9726978 3.4863281 2.9492188 C 3.3574329 2.8171982 3.1949659 2.7056512 3.1171875 2.5429688 C 3.217275 2.5774657 3.3089915 2.5917476 3.375 2.5410156 C 3.3312 2.4422036 3.1431978 2.3832544 3.0351562 2.1523438 C 3.1405219 2.1625606 3.2530413 2.1753316 3.2753906 2.1523438 C 3.2264836 1.953093 3.1428522 1.840665 3.0605469 1.7246094 C 3.2860523 1.7212561 3.6268033 1.7260944 3.6113281 1.7070312 L 3.4726562 1.5644531 C 3.6929308 1.5051481 3.91841 1.573905 4.0820312 1.625 C 4.1554993 1.567028 4.0798704 1.4947662 3.9902344 1.4199219 C 4.177429 1.4449139 4.347109 1.4875895 4.5 1.546875 C 4.581692 1.473116 4.4460309 1.3999314 4.3808594 1.3261719 C 4.6700596 1.3810409 4.7922896 1.4579597 4.9140625 1.5351562 C 5.0024105 1.4504733 4.9209501 1.3784035 4.8613281 1.3046875 z M 9.1660156 1.3046875 C 9.1063957 1.3784034 9.0229803 1.4504735 9.1113281 1.5351562 C 9.233101 1.4579595 9.3553312 1.381041 9.6445312 1.3261719 C 9.5793595 1.3999315 9.443699 1.4731155 9.5253906 1.546875 C 9.6782816 1.4875897 9.8479624 1.4449135 10.035156 1.4199219 C 9.9455206 1.4947662 9.8698914 1.567028 9.9433594 1.625 C 10.10698 1.573905 10.332459 1.5051481 10.552734 1.5644531 L 10.414062 1.7070312 C 10.398589 1.7260971 10.739339 1.7212594 10.964844 1.7246094 C 10.882547 1.8406651 10.799 1.9530103 10.75 2.1523438 C 10.77235 2.1753317 10.884868 2.1625606 10.990234 2.1523438 C 10.882193 2.3832546 10.694191 2.4422036 10.650391 2.5410156 C 10.7164 2.5917476 10.808116 2.5774656 10.908203 2.5429688 C 10.830425 2.7056511 10.667957 2.8171982 10.539062 2.9492188 C 10.571658 2.9726976 10.628872 2.9869751 10.763672 2.9707031 C 10.644582 3.0991992 10.50059 3.2166268 10.330078 3.3222656 C 10.360274 3.3576873 10.464217 3.357015 10.560547 3.359375 C 10.406097 3.512836 10.205837 3.5929601 10.019531 3.6933594 C 10.112396 3.7577674 10.17889 3.7430661 10.25 3.7421875 C 10.118234 3.8520832 9.8955014 3.9082706 9.6875 3.9746094 C 9.7270581 4.0370199 9.765039 4.0547449 9.8496094 4.0722656 C 9.6294524 4.19595 9.3154989 4.1379667 9.2265625 4.2011719 C 9.2480333 4.2633393 9.3082886 4.3041118 9.3808594 4.3378906 C 9.0264219 4.3587813 8.0568966 4.3247992 7.8710938 3.5800781 C 8.2339143 3.1753421 8.8960605 2.7006683 10.035156 2.1132812 C 9.148828 2.4144192 8.3489775 2.8167447 7.6796875 3.3691406 C 6.8928582 2.9972328 7.4364504 2.0579578 7.8203125 1.6855469 C 7.8397764 1.7838857 7.861541 1.8469022 7.8867188 1.8652344 C 8.0117107 1.729227 8.112539 1.5898698 8.2734375 1.4589844 C 8.2739606 1.5358575 8.2362393 1.6186938 8.3320312 1.6796875 C 8.4182934 1.5618715 8.5346307 1.4564289 8.6894531 1.3671875 C 8.6148821 1.4977392 8.6767055 1.5376906 8.7167969 1.5917969 C 8.8350489 1.4888692 8.9479544 1.3854503 9.1660156 1.3046875 z M 6.9960938 4.3710938 C 7.5540393 4.3649574 8.2449512 4.7875173 8.2421875 5.1855469 C 8.2397564 5.5368659 7.7565413 5.8218252 7 5.8164062 C 6.2591687 5.8075706 5.7599646 5.4595615 5.7617188 5.1191406 C 5.7631773 4.8389774 6.367311 4.3547386 6.9960938 4.3710938 z M 5.0976562 4.609375 C 5.2223867 4.60705 5.3507234 4.6164357 5.4824219 4.6386719 C 5.8705595 4.7038924 3.6225463 6.6664488 3.5878906 6.2285156 C 3.556936 5.2290196 4.2245436 4.62565 5.0976562 4.609375 z M 8.7773438 4.6425781 C 9.6504162 4.6588288 10.318063 5.2621347 10.287109 6.2617188 C 10.252455 6.6996686 8.0044406 4.7370788 8.3925781 4.671875 C 8.5242662 4.6496388 8.6526191 4.6402566 8.7773438 4.6425781 z M 8.40625 5.8613281 A 1.4440674 1.2239132 55.965822 0 1 9.3574219 8.4453125 A 1.4447495 1.2244913 55.965822 0 1 7.7636719 6.0351562 A 1.4440674 1.2239132 55.965822 0 1 8.40625 5.8613281 z M 5.5957031 5.9296875 A 1.2239132 1.4440674 34.034178 0 1 6.2382812 6.1015625 A 1.2240376 1.4442142 34.034178 1 1 4.6464844 8.5117188 A 1.2239132 1.4440674 34.034178 0 1 5.5957031 5.9296875 z M 10.466797 6.6738281 C 11.479744 7.252262 11.304172 8.5390232 10.757812 8.9785156 C 10.261114 9.1991588 9.8562724 6.510242 10.466797 6.6738281 z M 3.4121094 6.7070312 C 4.0225668 6.5433932 3.6177925 9.2343151 3.1210938 9.0136719 C 2.5747335 8.5742298 2.3991627 7.2854652 3.4121094 6.7070312 z M 7.0605469 8.4316406 A 1.3646002 1.258327 0 0 1 8.3925781 9.6972656 A 1.3646002 1.258327 0 1 1 5.6640625 9.6972656 A 1.3646002 1.258327 0 0 1 7.0605469 8.4316406 z M 10.042969 8.90625 C 10.149559 8.9034714 10.249876 8.9343182 10.339844 9.0039062 C 10.582102 9.245306 10.724899 10.154904 10.300781 10.699219 C 9.7166976 11.509663 8.925408 11.540193 8.6308594 11.314453 C 8.3227973 11.023895 8.5581783 10.121589 8.9804688 9.6269531 C 9.3428953 9.217735 9.7231981 8.9145858 10.042969 8.90625 z M 3.9179688 9.0996094 C 4.2615285 9.1143374 4.6738213 9.3856016 5.0097656 9.7753906 C 5.4000659 10.245615 5.5776701 11.072877 5.2519531 11.316406 C 4.9438071 11.50231 4.1940003 11.426205 3.6621094 10.662109 C 3.3033965 10.020936 3.3496989 9.3674525 3.6015625 9.1757812 C 3.6957215 9.1184241 3.8034487 9.0947 3.9179688 9.0996094 z M 7.0332031 11.353516 C 7.5814076 11.329586 8.3169175 11.528943 8.3183594 11.794922 C 8.3274594 12.053206 7.6525322 12.636284 6.9980469 12.625 C 6.3202397 12.65424 5.6553609 12.069772 5.6640625 11.867188 C 5.6539175 11.570158 6.488419 11.339885 7.0332031 11.353516 z \" />\n        </svg>\n      </g>\n  </svg>\n\n  <!-- table \n  border-collapse: collapse;-->\n  <table id=\"pi-table\" border=\"1\" style=\"\n    width: 500px;\n    position: absolute;\n    top: 100px;\n    right: 70px;\n    background-color: white;\n    z-index: 10;\n  \">    \n    <thead>\n      <tr>\n        <th>UID</th>\n        <th>tracking</th>\n        <th>state</th>\n        <th>finsished</th>\n      </tr>\n    </thead>\n    <tbody></tbody>\n  </table>\n</div>\n\n<!-- Styling -->\n<style>\n  #pi-table td,\n  #pi-table th {\n    text-align: center;\n  }\n  #pi-table tr.highlight {\n    background-color: yellow !important;\n    transition: background-color 0.5s ease;\n  }\n  \n  .svg-highlight {\n    /* filter: drop-shadow(0 0 6px orange) !important; */\n    transform: scale(0.5) !important;\n    /* optional: leicht vergrÃ¶Ãern */\n    transition: all 0.3s ease;\n  }\n  .svg-colored {\n    transition: all 0.3s ease;\n  }\n</style>\n\n\n<script>\n\n  // global variables\n  window.tableData = window.tableData || {};\n  window.uidColors = window.uidColors || {};\n  window.hueIndex = window.hueIndex || 0;\n\n  (function(scope) {\n    scope.$watch('msg.table', function(msg) {\n      if (msg === \"reset\") {\n        // SVG-PIs entfernen\n        let allPIs = document.querySelectorAll(\"g[id^='PI-']\");\n        allPIs.forEach(pi => pi.remove());\n        \n        // Tabelleninhalt entfernen\n        let tbody = document.querySelector(\"#pi-table tbody\");\n        if (tbody) {\n          tbody.innerHTML = \"\";\n        }\n        \n        // Optional: Falls du auch das JS-Objekt tableData nutzt und es zurÃ¼cksetzen willst\n        if (typeof tableData !== 'undefined') {\n          tableData = {};\n          uidColors = {};\n        }\n      }\n    });\n  })(scope);\n\n  (function(scope) {\n\n    scope.$watch('msg.table', function(data) {\n      if (!data || !data.UID || typeof data.x !== 'number' || typeof data.y !== 'number') return;\n      \n      let uid = data.UID;\n      let tracking = data.tracking;\n      let state = data.state;\n      let finished = data.finished;\n      let x = data.x;\n      let y = data.y;\n\n      let piId = `PI-${uid}`;\n\n      let tbody = document.querySelector(\"#pi-table tbody\");\n      tableData[uid] = { tracking, state, finished, x, y };\n      let existingRow = tbody.querySelector(`tr[data-uid=\"${uid}\"]`); // verify if row exists\n\n      // handle table\n      if (existingRow) {\n        // ð Zeile aktualisieren\n        existingRow.cells[1].textContent = tracking;\n        existingRow.cells[2].textContent = state;\n        existingRow.cells[3].textContent = finished;\n      } else {\n        // â insert new row\n        let row = document.createElement(\"tr\");\n        row.setAttribute(\"data-uid\", uid);\n        row.style.cursor = \"pointer\";\n        // â HIGHLIGHT PI WENN DIE ZEILE GEKLICKT WIRD\n        row.addEventListener(\"click\", function () {\n          let pi = document.getElementById(`PI-${uid}`);\n          console.log(pi);\n          if (pi) {\n            // Highlight-Klasse hinzufÃ¼gen\n            pi.classList.add(\"svg-highlight\");\n            \n            // Nach 1 Sekunde wieder entfernen\n            setTimeout(() => {\n              pi.classList.remove(\"svg-highlight\");\n            }, 1000);\n          }\n        });\n        row.innerHTML = `\n        <td>${uid}</td>\n        <td>${tracking}</td>\n        <td>${state}</td>\n        <td>${finished}</td>\n        `;\n        tbody.appendChild(row);\n      }\n\n\n      // handle Bandumlauf\n      // Check if a PI with this UID already exists\n      let existing = document.getElementById(piId);\n\n      if (!existing) {\n        // Create new <g> element\n        let protoPI = document.getElementById(\"PI\");\n        let newPI = protoPI.cloneNode(true);\n        let offset = 0;\n        let overlapping = Object.values(tableData).filter(e => e.x === x && e.y === y).length;\n        offset = (overlapping - 1) * 10;\n        newPI.setAttribute(\"id\", piId);\n        newPI.setAttribute(\"transform\", `translate(${x + offset}, ${y}) scale(0.4)`);\n        newPI.style.display = \"inline\";\n\n        // UID als Tooltip anzeigen\n        let title = document.createElementNS(\"http://www.w3.org/2000/svg\", \"title\");\n        title.textContent = uid;\n        newPI.appendChild(title);\n\n        // show new pointer on hovering\n        newPI.style.cursor = \"pointer\"; \n\n        // highlight row for a clicked PI\n        newPI.addEventListener(\"click\", function() {\n          // Zeile zur UID in der Tabelle finden\n          let row = document.querySelector(`tr[data-uid=\"${uid}\"]`);\n          if (row) {\n            row.classList.add(\"highlight\");\n            // Highlight nach 1 Sekunde wieder entfernen\n            setTimeout(() => {\n              row.classList.remove(\"highlight\");\n            }, 1000);\n          }\n        });\n\n        // Add it to the bandumlauf - SVG\n        let svgRoot = document.getElementById(\"bandumlauf\");\n        svgRoot.appendChild(newPI);\n        let color = getUniqueColorForUID(uid);\n        highlightEntry(uid, color);\n      } else {\n        // Just move it\n        let offset = 0;\n        let overlapping = Object.values(tableData).filter(e => e.x === x && e.y === y).length;\n        offset = (overlapping - 1) * 10;\n        existing.setAttribute(\"transform\", `translate(${x + offset}, ${y}) scale(0.4)`);\n      }\n    });\n  })(scope);\n\n  function highlightEntry(uid, color = \"orange\") {\n    // Zeile in der Tabelle einfÃ¤rben\n    const row = document.querySelector(`tr[data-uid=\"${uid}\"]`);\n    if (row) {\n      row.style.backgroundColor = color;\n    }\n    \n    // SVG-PI einfÃ¤rben (z.â¯B. durch Filter oder direkte Farbe)\n    const pi = document.getElementById(`PI-${uid}`);\n    if (pi) {\n      pi.classList.add(\"svg-colored\");\n      pi.style.filter = `drop-shadow(0 0 6px ${color})`;\n      // pi.style.fill = color;\n    }\n  }\n\n  function getUniqueColorForUID(uid) {\n    if (!uidColors[uid]) {\n      // z.â¯B. Schritte von 40Â° auf dem Farbkreis\n      const hue = (hueIndex * 40) % 360;\n      uidColors[uid] = `hsl(${hue}, 70%, 70%)`;\n      hueIndex++;\n    }\n    return uidColors[uid];\n  }\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 880,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f1619fd79c7d79bd",
        "type": "function",
        "z": "ba56541079a77bac",
        "name": "function 2",
        "func": "let data = msg.payload;\n\nlet uid = (data.UID || []).join(\"\");\nlet state = data.state ? \"OK\" : \"nicht OK\";\nlet finished = data.finished ? \"Fertig\" : \"In Bearbeitung\";\nlet tracking = data.tracking || 0;\n\nlet coords = [\n  { x: 70, y: 500 },    // not positioned\n  { x: 500, y: 530 },   // to shelf \n  { x: 550, y: 400 },   // at shelf\n  { x: 650, y: 100 },   // in shelf \n  { x: 450, y: 60 },    // to screwing\n  { x: 170, y: 60 },    // at screwing\n  { x: 460, y: 220 },   // to end of line\n  { x: 460, y: 400 },   // at end of line\n  { x: 750, y: 30 },    // at assembling\n  { x: 600, y: 200}     // to assembling\n];\n\nlet tracking_text = [\n  \"nicht positioniert\",\n  \"zum Regal\",\n  \"am Regal\",\n  \"im Regal\",\n  \"zum Schrauben\",\n  \"beim Schrauben\",\n  \"zu end of line\",\n  \"bei end of line\",\n  \"zum Zusammenbau\",\n  \"beim Zusammenbau\"\n]\n\nmsg.table = {\n    UID: uid,\n    tracking: tracking_text[tracking],\n    state: state,\n    finished: finished,\n    x: coords[tracking].x,\n    y: coords[tracking].y\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "2a77923f86e394ce",
                "b1f09c19fc026e35"
            ]
        ]
    },
    {
        "id": "b1f09c19fc026e35",
        "type": "debug",
        "z": "ba56541079a77bac",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "table",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 260,
        "wires": []
    },
    {
        "id": "7b671c1d4bd5b42b",
        "type": "inject",
        "z": "ba56541079a77bac",
        "name": "reset all",
        "props": [
            {
                "p": "table",
                "v": "reset",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 690,
        "y": 100,
        "wires": [
            [
                "2a77923f86e394ce"
            ]
        ]
    },
    {
        "id": "126a84eeff63c5a9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "10.42.0.1",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "68dc7b33a2269221",
        "type": "ui_group",
        "name": "Standard",
        "tab": "fe1978528a5a9baf",
        "order": 1,
        "disp": false,
        "width": "28",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe1978528a5a9baf",
        "type": "ui_tab",
        "name": "NFC-Tracking",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]